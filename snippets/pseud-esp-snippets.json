{
    "Algoritmo Funcion": {
      "prefix": "funcion",
      "body": [
        "tipo: función $1 (${2:args})",
        "inicio",
        "$2",
        "fin_función"
      ],
      "description": "Snippet para iniciar funcion"
    },
    "Estructura condicional simple": {
      "prefix": "si",
      "body": [
        "si ${1:cond} entonces",
        "   $2",
        "fin_si"
      ],
      "description": "Snippet para estructura condicional simple"
    },

    "Estructura condicional doble": {
      "prefix": "si-no",
      "body": [
        "si ${1:cond} entonces",
        "   $2",
        "si_no",
        "   $3",
        "fin_si"
      ],
      "description": "Snippet para estructura condicional doble"
    },
    "Estructura selectiva multiple": {
      "prefix": "según_sea",
      "body": [
        "según_sea ${1:var} hacer",
        "   1: ",
        "   2: ",
        "   3: ",
        "   en_otro_caso: ",
        "fin_según"
      ],
      "description":""
    },

    "Estructura bucle while": {
      "prefix":"mientras",
      "body": [
        "mientras ${1:cond} hacer",
        "   ${2:instrucciones}",
        "fin_mientras"
      ],
      "description": "Snippet para bucle while"
    },
    "Estructura bucle do-while": {
      "prefix":"repetir",
      "body": [
        "repetir",
        "   ${2:instrucciones}",
        "hasta_que ${1:cond}"
      ],
      "description": "Snippet para bucle do-while"
    },
    "Estructura bucle for": {
      "prefix":"desde",
      "body": [
        "desde ${1:cond} hasta ${2:N} hacer",
        "   ${3:instrucciones}",
        "fin_desde"
      ],
      "description": "Snippet para bucle for"
    },
    
    "Vector": {
      "prefix": "vector",
      "body": [
        "Vector [${1:N}] de ${2:{tipo}}: ${3:{NomVect}}"
      ],
      "description": "Declaración de Vector"
    },

    "Matriz": {
      "prefix": "matriz",
      "body": [
        "Matriz [${1:N,M}] de ${2:{tipo}}: ${3:{NomMat}}"
      ],
      "description": "Declaración de Matriz"
    },



    "Operador Lógico AND": {
      "prefix": "and",
      "body": [
        "∧"
      ],
      "description": "Operador Lógico Formal AND"
    },
    "Operador Lógico OR": {
      "prefix": "or",
      "body": [
        "∨"
      ],
      "description": "Operador Lógico Formal OR"
    },
    "Negación": {
      "prefix": "not",
      "body": [
        "¬"
      ],
      "description": "Operador Lógico Formal NOT"
    },
    "Existe": {
      "prefix": "existe",
      "body": ["∃"],
      "description": "Cuantificador existencial"
    },
    "Para todo": {
      "prefix": "para todo",
      "body": ["∀"],
      "description": "Cuantificador universal"
    },
    "Productorio": {
      "prefix": "productorio",
      "body":["∏"],
      "description": "Símbolo productorio"
    },
    "Sumatorio": {
      "prefix": "sumatorio",
      "body":["Σ"],
      "description": "Símbolo sumatorio"
    },
    "Pertenece": {
      "prefix": "pertenece",
      "body": ["∈"],
      "description": "Símbolo de pertenencia"
    },
    "Parte por defecto": {
      "prefix": "exceso",
      "body": ["⌊${1:N}⌋"],
      "description": "Snippet para indicar aproximación por defecto"
    },
    "Parte por exceso": {
      "prefix": "defecto",
      "body": ["⌈${1:N}⌉"],
      "description": "Snippet para indicar aproximación por exceso"
    }
}